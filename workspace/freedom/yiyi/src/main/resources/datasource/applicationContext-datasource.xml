<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.1.xsd  
    http://www.springframework.org/schema/aop  
   	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 主数据源，使用alibaba druid连接池 -->
	<!-- <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		init-method="init" destroy-method="close"> <property name="name" value="${master.name}"/> 
		<property name="url" value="${master.url}"/> <property name="username" value="${master.username}"/> 
		<property name="password" value="${master.password}"/> <property name="driverClassName" 
		value="${master.driverClassName}"/> <property name="initialSize" value="${master.initialSize}"/> 
		<property name="maxActive" value="${master.maxActive}"/> <property name="minIdle" 
		value="${master.minIdle}"/> <property name="maxWait" value="${master.maxWait}"/> 
		<property name="useUnfairLock" value="${master.useUnfairLock}"/> <property 
		name="validationQuery" value="${master.validationQuery}"/> <property name="testOnBorrow" 
		value="${master.testOnBorrow}"/> <property name="testOnReturn" value="${master.testOnReturn}"/> 
		<property name="testWhileIdle" value="${master.testWhileIdle}"/> <property 
		name="timeBetweenEvictionRunsMillis" value="${master.timeBetweenEvictionRunsMillis}"/> 
		<property name="minEvictableIdleTimeMillis" value="${master.minEvictableIdleTimeMillis}"/> 
		<property name="filters" value="${master.filters}" /> </bean> -->


	<!--使用c3p0连接池 -->
	<bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${master.user}"></property>
		<property name="password" value="${master.password}"></property>
		<property name="jdbcUrl" value="${master.jdbcUrl}"></property>
		<property name="driverClass" value="${master.driverClass}"></property>

		<property name="initialPoolSize" value="${master.initPoolSize}"></property>
		<property name="maxPoolSize" value="${master.maxPoolSize}"></property>
		<property name="testConnectionOnCheckout" value="true"></property>
	</bean>

	<!-- 数据源Aspect HuGuangJun 2014-09-28 -->
	<bean id="dataSourceAspect" class="com.yiyi.module.datasource.DataSourceAspect" />

	<!-- 数据源AOP HuGuangJun 2014-09-28 -->
	<aop:config>
		<aop:aspect order="1" ref="dataSourceAspect">
			<!-- 由于业务日志是存储在MongoDB上故排除业务日志Service -->
			<aop:pointcut id="dsPointCut" expression="execution(* com.yiyi..*Service.*(..))" />
			<aop:before pointcut-ref="dsPointCut" method="before" />
		</aop:aspect>
	</aop:config>

	<!-- 总数据源 HuGuangJun 2014-09-28 -->
	<bean id="dataSource" class="com.yiyi.module.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="masterDataSource" />
			</map>
		</property>
		<!-- 默认的数据源 -->
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>

	<!-- 事务管理器 HuGuangJun 2014-09-28 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 其它方法使用普通事务 -->
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="execute*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="call*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED"
				rollback-for="Exception" />
			<!-- 默认只读 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务AOP -->
	<aop:config>
		<aop:pointcut id="txPointCut" expression="execution(* com.yiyi..*Service.*(..))" />
		<aop:advisor order="2" pointcut-ref="txPointCut"
			advice-ref="txAdvice" />
	</aop:config>


</beans>    